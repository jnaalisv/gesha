plugins {
    id 'org.springframework.boot' version '1.5.2.RELEASE'
    id "groovy"
}


ext {
    slf4jVersion = "1.7.25"
    logbackVersion = "1.2.2"
    junitVersion = "4.12"
    groovyVersion = "2.4.9"
    assertJVersion = "3.4.1"
    springVersion = "4.3.7.RELEASE"
    springSecurityVersion = "4.2.2.RELEASE"
    jacksonVersion = "2.8.7"
    javaJwtVersion = "2.1.0"
    hibernateVersion = "5.2.8.Final"
    hikariCPVersion = "2.6.1"
    h2Version = "1.4.193"
}

repositories {
    jcenter()
}

ext['hikaricp.version'] = "2.6.1"

dependencies {

    runtime (
            "ch.qos.logback:logback-classic:$logbackVersion",
            "org.codehaus.groovy:groovy:$groovyVersion",
            "org.slf4j:jcl-over-slf4j:$slf4jVersion",
            "com.h2database:h2:$h2Version"
    )

    compile (
            "org.slf4j:slf4j-api:$slf4jVersion",
            "org.springframework.boot:spring-boot-starter-web",
            "org.springframework.security:spring-security-web:$springSecurityVersion",
            "org.springframework.security:spring-security-config:$springSecurityVersion",
            "com.fasterxml.jackson.core:jackson-databind:$jacksonVersion",
            "com.auth0:java-jwt:$javaJwtVersion",
            "commons-codec:commons-codec:1.4",
            "org.hibernate:hibernate-core:$hibernateVersion",
            "org.springframework:spring-tx:$springVersion",
            "org.springframework:spring-orm:$springVersion",
            "com.zaxxer:HikariCP",
    )

    testCompile (
            "junit:junit:$junitVersion",
            "org.assertj:assertj-core:$assertJVersion",
            "org.springframework:spring-test:$springVersion"
    )
}

configurations {
    compile.exclude group: "commons-logging"
}

wrapper {
    gradleVersion = "3.4.1"
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

gradle.projectsEvaluated {
    tasks.withType(JavaCompile) {
        options.encoding = 'UTF-8'
        options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation"
    }
}
